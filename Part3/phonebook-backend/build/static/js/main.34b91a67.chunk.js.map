{"version":3,"sources":["services/Numbers.js","Components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Notification","message","color","className","Numbers","number","person","name","onClick","window","confirm","numberService","then","location","reload","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newSearch","setSearch","checker","setChecker","errorMessage","setErrorMessage","messageColor","setMessageColor","useEffect","console","log","response","data","onSubmit","event","preventDefault","test","map","phone","some","a","includes","value","onChange","target","numberObject","reponse","concat","setTimeout","catch","error","type","numberArray","nums","index","names","indexOf","alert","filter","ReactDOM","render","document","getElementById"],"mappings":"sNACMA,EAAU,eAoBD,EAlBA,WACb,OAAOC,IAAMC,IAAIF,IAiBJ,EAdA,SAAAG,GACb,OAAOF,IAAMG,KAAKJ,EAASG,IAad,EAVA,SAACE,EAAIF,GAClB,OAAOF,IAAMK,IAAN,UAAaN,EAAb,YAAwBK,GAAMF,IASxB,EANM,SAACE,GAClB,OAAOJ,IAAMM,OAAN,UAAgBP,EAAhB,YAA2BK,K,OCJrBG,EAZI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC7B,OAAgB,OAAZD,EACK,KAIP,qBAAKE,UAAYD,EAAjB,SACGD,KC4JHG,EAAU,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,OAAOR,EAAgB,EAAhBA,GAAIS,EAAY,EAAZA,OAC3B,OACE,gCACA,8BAAID,EAAOE,KAAX,IAAkBF,EAAOA,UACzB,wBAAQG,QAAS,kBACfC,OAAOC,QAAP,0CAAkDJ,EAAlD,MACEK,EACgBd,GACbe,KAAKH,OAAOI,SAASC,UACtB,MALN,wBAWWC,EA7KH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA+BN,mBAAS,IAAxC,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAA8BR,oBAAS,GAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAwCV,mBAAS,MAAjD,mBAAOW,EAAP,KAAqBC,EAArB,KACA,EAAwCZ,mBAAS,SAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAaAC,qBAXa,WACXC,QAAQC,IAAI,UACZtB,IAEGC,MAAK,SAAAsB,GACJF,QAAQC,IAAI,qBACZf,EAAWgB,EAASC,WAKV,IAkGhB,OACE,gCACE,2CACA,cAAC,EAAD,CAAclC,QAAS0B,EAAczB,MAAO2B,IAC5C,sBAAMO,SAvEQ,SAACC,GACjBA,EAAMC,iBACN,IAAMC,EAAOtB,EAAQuB,KAAI,SAAAC,GAAK,OAAIA,EAAMlC,QACxCmB,EAAWa,EAAKG,MAAK,SAAAC,GAAC,OAAEA,EAAEC,SAASrB,OAEnCS,QAAQC,IAAIR,GACZO,QAAQC,IAAIV,GAEZC,EAAU,KA+DR,SACE,sDACqB,uBACnBqB,MAAOtB,EACPuB,SAvDiB,SAACT,GACxBb,EAAUa,EAAMU,OAAOF,eA0DrB,gDACA,uBAAMT,SA7GQ,SAACC,GACjBA,EAAMC,iBACN,IAAMU,EAAe,CACnBzC,KAAMY,EACNd,OAAQgB,GAGIJ,EAAQuB,KAAI,SAAAC,GAAK,OAAIA,EAAMlC,QAAMqC,SAASzB,IAExDR,EACUqC,GACPpC,MAAK,SAAAqC,GACJ/B,EAAWD,EAAQiC,OAAOF,IAC1BpB,EAAgB,GAAD,OACZT,EADY,oBAGfW,EAAgB,SAChBqB,YAAW,WACXvB,EAAgB,QACb,KACHR,EAAW,IACXE,EAAa,OAEd8B,OAAM,SAAAC,GACLrB,QAAQC,IAAIoB,EAAMJ,QAAQd,MAC1BP,EAAgByB,EAAMJ,QAAQd,UAoFhC,UACE,yCACQ,uBACNU,MAAO1B,EACP2B,SAxEc,SAACT,GACrBjB,EAAWiB,EAAMU,OAAOF,aA0EpB,2CACU,uBACRA,MAAOxB,EACPyB,SA1EgB,SAACT,GACvBf,EAAae,EAAMU,OAAOF,aA4EtB,8BACE,wBAAQS,KAAK,SAAS9C,QAtEP,SAAC6B,GACtB,IAAMW,EAAe,CACnBzC,KAAMY,EACNd,OAAQgB,GAGV,GAAGJ,EAAQuB,KAAI,SAAAnC,GAAM,OAAIA,EAAOE,QAAMqC,SAASzB,GAAS,CACxD,IAAMoC,EAAetC,EAAQuB,KAAI,SAAAgB,GAAI,OAAIA,EAAKnD,UAExCoD,EADaxC,EAAQuB,KAAI,SAAAkB,GAAK,OAAIA,EAAMnD,QACtBoD,QAAQxC,GAEhCa,QAAQC,IAAIwB,GACZzB,QAAQC,IAAIhB,EAAQwC,GAAO5D,IACZ0D,EAAYE,KAAYpC,EAC/BZ,OAAOC,QAAP,gCAAwCS,EAAxC,gBACFR,EACUM,EAAQwC,GAAO5D,GAAGmD,GACzBpC,MAAK,SAAAsB,GACJN,EAAgB,GAAD,OACZT,EADY,oBAGfgC,YAAW,WACXvB,EAAgB,QACb,KACHnB,OAAOI,SAASC,YAEjBsC,OAAM,SAAAC,GACLzB,EAAgB,GAAD,OACVT,EADU,8CAGbW,EAAgB,SAChBqB,YAAW,WACXvB,EAAgB,QACb,QAEPnB,OAAOmD,MAAMzC,EAAU,0BAG7BD,EAAWD,GAEbe,QAAQC,IAAIZ,IA8BN,sBAGJ,yCACCW,QAAQC,IAAIV,GACZE,EAAWR,EAAQ4C,QAAO,SAAAvD,GAAM,OAAIA,EAAOC,KAAKqC,SAASrB,MAAaiB,KAAI,SAAAC,GAAK,OAAI,cAAC,EAAD,CAA0BpC,OAASoC,EAAO5C,GAAI4C,EAAM5C,GAAIS,OAAQmC,EAAMlC,MAAxDkC,EAAMlC,SAA8DU,EAAQuB,KAAI,SAAAC,GAAK,OAAI,cAAC,EAAD,CAA2BpC,OAASoC,EAAO5C,GAAI4C,EAAM5C,GAAIS,OAAQmC,EAAMlC,MAAxDkC,EAAMlC,aCtJtNuD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.34b91a67.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst deleteNumber = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\n\n\nexport default { getAll, create, update, deleteNumber }","const Notification = ({ message, color }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className= {color}>\n        {message}\n      </div>\n    )\n  }\n  \n  export default Notification","import React,{useState, useEffect} from 'react'\nimport axios from 'axios'\nimport numberService from './services/Numbers'\nimport Notification from './Components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newSearch, setSearch] = useState('')\n  const [checker, setChecker] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [messageColor, setMessageColor] = useState(\"added\")\n\n  const hook = () => {\n    console.log('effect')\n    numberService\n      .getAll()\n      .then(response =>{\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n\n  }\n\n  useEffect(hook, [])\n\n  const addNumber = (event) => {\n    event.preventDefault()\n    const numberObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const check = persons.map(phone => phone.name).includes(newName) ?\n    null:\n    numberService\n      .create(numberObject)\n      .then(reponse => {\n        setPersons(persons.concat(numberObject))\n        setErrorMessage(\n        `${newName} has been added`\n        )\n        setMessageColor(\"added\")\n        setTimeout(() => {\n        setErrorMessage(null)\n        }, 5000)\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {\n        console.log(error.reponse.data)\n        setErrorMessage(error.reponse.data)\n      })\n  }\n\n  const addSearch = (event) => {\n    event.preventDefault()\n    const test = persons.map(phone => phone.name)\n    setChecker(test.some(a=>a.includes(newSearch)))\n\n    console.log(checker)\n    console.log(newSearch)\n\n    setSearch('')\n\n  }\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchName = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const handleSameName = (event) => {\n    const numberObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if(persons.map(number => number.name).includes(newName)){\n    const numberArray = (persons.map(nums => nums.number))\n    const nameArray = (persons.map(names => names.name))\n    const index = nameArray.indexOf(newName)\n\n    console.log(index)\n    console.log(persons[index].id)\n    const sames = (numberArray[index] !== (newNumber))\n          ? window.confirm(`Would you like change ${newName}'s number?`) ?\n          numberService\n            .update(persons[index].id,numberObject)\n            .then(response =>{ \n              setErrorMessage(\n              `${newName} has been added`\n              )\n              setTimeout(() => {\n              setErrorMessage(null)\n              }, 5000)\n              window.location.reload()\n            })\n            .catch(error => {\n              setErrorMessage(\n                `${newName} has already been removed from the server`\n                )\n                setMessageColor(\"error\")\n                setTimeout(() => {\n                setErrorMessage(null)\n                }, 5000)})\n          : null\n          : window.alert(newName + ' is already added')\n    }\n    else{\n      setPersons(persons)\n    }\n    console.log(newNumber)\n  }\n\n  return(\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} color={messageColor}/>\n      <form onSubmit= {addSearch}>\n        <div>\n          Search Names with: <input \n          value={newSearch}\n          onChange={handleSearchName}\n          />\n        </div>\n      </form>\n      <h2>Add New Number</h2>\n      <form onSubmit= {addNumber}>\n        <div>\n          name: <input \n          value={newName}\n          onChange={handleNewName}\n          />\n        </div>\n        <div>\n          number: <input \n          value={newNumber}\n          onChange={handleNewNumber}\n          />\n        </div>\n        <div>\n          <button type='submit' onClick= {handleSameName}>add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      {console.log(newSearch)}\n      {checker ? (persons.filter(person => person.name.includes(newSearch))).map(phone => <Numbers key={phone.name} number ={phone} id={phone.id} person={phone.name}/> ) : persons.map(phone => <Numbers key= {phone.name} number= {phone} id={phone.id} person={phone.name}/>)}\n    </div>\n  )\n\n\n}\n\nconst Numbers = ({number,id, person}) => {\n  return(\n    <div>\n    <p>{number.name} {number.number}</p>\n    <button onClick={() => \n      window.confirm(`Are you Sure you want to delete ${person}?`) ?\n        numberService\n          .deleteNumber(id)\n          .then(window.location.reload()) \n        : null\n    }>Delete</button>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}